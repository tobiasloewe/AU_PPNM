1 0.33 0.22
2 0.50 0.75
3 0.39 0.73
4 0.30 0.49
5 0.23 0.34
6 0.22 0.38
7 0.20 0.31
8 0.18 0.27
9 0.20 0.34
10 0.22 0.35
11 0.20 0.34
12 0.19 0.33
13 0.17 0.29
14 0.20 0.32
15 0.18 0.28
16 0.19 0.30
17 0.18 0.28
18 0.21 0.36
19 0.20 0.37
20 0.21 0.35
21 0.18 0.27
22 0.20 0.32
23 0.18 0.30
24 0.21 0.35
25 0.19 0.33
26 0.20 0.32
27 0.22 0.34
28 0.24 0.37
29 0.20 0.33
30 0.19 0.30
31 0.21 0.34
32 0.19 0.32
33 0.18 0.31
34 0.20 0.31
35 0.22 0.36
36 0.23 0.38
37 0.19 0.31
38 0.21 0.34
39 0.23 0.40
40 0.20 0.32
41 0.20 0.30
42 0.20 0.34
43 0.19 0.32
44 0.22 0.36
45 0.21 0.35
46 0.21 0.29
47 0.21 0.37
48 0.22 0.34
49 0.22 0.40
50 0.20 0.29
51 0.18 0.30
52 0.21 0.34
53 0.21 0.35
54 0.21 0.36
55 0.22 0.41
56 0.19 0.35
57 0.20 0.32
58 0.21 0.32
59 0.20 0.35
60 0.22 0.37
61 0.20 0.32
62 0.21 0.35
63 0.21 0.33
64 0.21 0.36
 0.30 0.20
 
this was mode 1

 0.31 0.22
this was mode 2

 
Computation finished.
 Mode 2 might have more scheduling overhead than our simple multithreading approach and is therefore slower
